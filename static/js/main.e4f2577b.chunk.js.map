{"version":3,"sources":["components/group/item/item.jsx","components/group/gorupItem.jsx","services/connection.js","components/printForm/printForm.jsx","services/transform.js","components/dataEditor/dataEditor.jsx","components/controller/controller.jsx","App.js","reportWebVitals.js","index.js"],"names":["Item","state","selected","value","this","props","nullable","setState","available","textAlign","width","height","left","corrected","x","top","y","alignItems","centered","className","style","gen_style","onClick","toggle","data","React","Component","defaultProps","data_id","GroupItem","fontSize","replace","console","log","upperCase","itemProps","map","itemProp","toUpperCase","key","id","items_available","proxy_url","code","a","fetch","response","blob","img","PrintForm","group_av","item_av","dataO","groups","forEach","g","name","groupProp","parseInt","pageWidth","pageHeight","src","alt","position","gen_form","type","onChange","defaultChecked","attribs_to_json","xml_element","res","attr","attributes","isNaN","xml_to_json","xml_text","root","DOMParser","parseFromString","getElementsByTagName","undefined","childNodes","child","push","items","parse_group","DataEditor","onRef","gr_id","itm_id","callbackFunc","title","itm","placeholder","e","target","b","c","Controller","backmap","update_value","bind","json_view","mp","i","length","j","group","item","val","gp_index","itm_index","emit_all","setTimeout","emit_when_possible","new_xml","json_obj","gen_backmap","get_image","then","img_data","URL","createObjectURL","update_state","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4f2577b.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\n\r\nexport default class Item extends React.Component {\r\n    state = {\r\n        selected: false,\r\n        value: \"Test\",\r\n    };\r\n\r\n    componentDidMount() {\r\n        if(this.props.nullable){\r\n            this.setState({value:\"\"});\r\n        }\r\n    }\r\n\r\n    corrected(value){\r\n        if(this.props.available || this.state.selected){\r\n            return \"calc(\"+value+\"mm - 1px)\"\r\n        } else {\r\n            return value + \"mm\"\r\n        }\r\n    }\r\n\r\n    gen_style() {\r\n\r\n\r\n        return {\r\n            textAlign: \"left\",\r\n            width: this.props.width + \"mm\",\r\n            height: this.props.height + \"mm\",\r\n            left: this.corrected(this.props.x),\r\n            top: this.corrected(this.props.y),\r\n            alignItems: (this.props.centered === \"true\") ? \"center\" : \"left\"\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        if (this.props.available)\r\n            this.setState({selected: !this.state.selected})\r\n    }\r\n\r\n\r\n    render() {\r\n        return <div\r\n            className={\"item\" + (this.state.selected ? \" item-selected\" : \"\") + (this.props.available ? \" item-available\" : \"\")}\r\n            style={this.gen_style()}\r\n            onClick={() => this.toggle()}\r\n        >\r\n            <span>{this.props.data ? this.props.data : this.state.value}</span>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nItem.defaultProps = {\r\n    data_id: \"\",\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0,\r\n    available: true,\r\n    nullable: false,\r\n};","import React from \"react\"\r\nimport Item from \"./item/item\";\r\n\r\n\r\nexport default class GroupItem extends React.Component {\r\n    state = {\r\n        selected: false,\r\n    };\r\n\r\n    corrected(value){\r\n        if(this.props.available || this.state.selected){\r\n            return \"calc(\"+value+\"mm - 1px)\"\r\n        } else {\r\n            return value + \"mm\"\r\n        }\r\n    }\r\n\r\n\r\n    gen_style() {\r\n        return {\r\n            width: this.props.width + \"mm\",\r\n            height: this.props.height + \"mm\",\r\n            left: this.corrected(this.props.x),\r\n            top: this.corrected(this.props.y),\r\n            fontSize: this.props.fontSize ? (\".\" + this.props.fontSize.replace(\".\",\"\") + \"in\") : \"inherit\",\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        if (this.props.available)\r\n            this.setState({selected: !this.state.selected})\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(\"upper ? \"+this.props.upperCase);\r\n        console.log(this.props.itemProps);\r\n        return <div\r\n            className={\"group-item\" + (this.state.selected ? \" item-selected\" : \"\") + (this.props.available ? \" item-available\" : \"\")}\r\n            style={this.gen_style()}\r\n            onClick={() => this.toggle()}\r\n        >\r\n            {this.props.itemProps.map(itemProp => <Item {...itemProp}\r\n                                                        data={(this.props.upperCase === \"true\") ?\r\n                                                            (itemProp.data ? itemProp.data : (itemProp.nullable ? \"\" : \"Test\")).toUpperCase() :\r\n                                                            (itemProp.data ? itemProp.data : (itemProp.nullable ? \"\" : \"Test\"))}\r\n                                                        key={itemProp.id}\r\n                                                        available={this.props.items_available}\r\n            />)}\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nGroupItem.defaultProps = {\r\n    data_id: \"\",\r\n    x: 0,\r\n    y: 0,\r\n    width: 0,\r\n    height: 0,\r\n    available: true,\r\n    itemProps: []\r\n};","const proxy_url = \"http://172.24.14.103:30540/inv-backend/proxy/print/formImage/\";\r\n\r\nexport async function get_image(code){\r\n    let response = await fetch(proxy_url + code);\r\n    let img = await response.blob();\r\n    console.log(img);\r\n    return img\r\n}","import React from \"react\"\r\nimport GroupItem from \"../group/gorupItem\";\r\nimport Item from \"../group/item/item\";\r\nimport {get_image} from \"../../services/connection\";\r\n\r\n\r\nexport default class PrintForm extends React.Component {\r\n    state = {\r\n        group_av: true,\r\n        item_av: true,\r\n    };\r\n\r\n\r\n    gen_form(dataO) {\r\n        dataO.groups.forEach(g=>console.log(g.upperCase));\r\n        return <div id={dataO.name} className={\"item\"}\r\n                    style={{\r\n                        left: dataO.x + \"mm\",\r\n                        top: dataO.y + \"mm\",\r\n                        width: dataO.width + \"mm\",\r\n                        height: dataO.height + \"mm\",\r\n                        fontSize: \".\" + dataO.fontSize.replace(\".\",\"\") + \"in\",\r\n                    }}\r\n        >\r\n            {dataO.groups.map(groupProp => <GroupItem {...groupProp}\r\n                                                      key={groupProp.id}\r\n                                                      items_available={this.state.item_av}\r\n                                                      available={this.state.group_av}\r\n\r\n            />)}\r\n        </div>\r\n    }\r\n\r\n\r\n    render() {\r\n        console.log(this.props.img);\r\n        return <div className={\"print\"}\r\n                    style={\r\n                        {\r\n                            width: (40 + parseInt(this.props.data.pageWidth)) + \"mm\",\r\n                            height: this.props.data.pageHeight + \"mm\"\r\n                        }}>\r\n            <div className={\"printArea\"} style={\r\n                {\r\n                    width: this.props.data.pageWidth + \"mm\",\r\n                    height: this.props.data.pageHeight + \"mm\"\r\n                }}>\r\n                <img src={this.props.img} alt={\"бланк\"}\r\n                     style={\r\n                         {\r\n                             width: this.props.data.pageWidth + \"mm\",\r\n                             height: this.props.data.pageHeight + \"mm\",\r\n                             top: 0,\r\n                             left: 0,\r\n                             position: \"absolute\",\r\n\r\n                         }}/>\r\n                {this.gen_form(this.props.data)}\r\n            </div>\r\n            <div className={\"control-panel\"}>\r\n                <label><input type=\"checkbox\"\r\n                              onChange={() => this.setState({group_av: !this.state.group_av})}\r\n                              defaultChecked={this.state.group_av}/>Группы</label>\r\n                <label><input type=\"checkbox\"\r\n                              onChange={() => this.setState({item_av: !this.state.item_av})}\r\n                              defaultChecked={this.state.item_av}/>Элементы</label>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nPrintForm.defaultProps = {\r\n    data: []\r\n};","function parse_group(xml_element) {\r\n    let res = attribs_to_json(xml_element);\r\n\r\n    let items = [];\r\n    xml_element.childNodes.forEach(child => {\r\n        if(child.attributes){\r\n            items.push(attribs_to_json(child))\r\n        }\r\n    });\r\n    res[\"itemProps\"] = items;\r\n    return res;\r\n}\r\n\r\nfunction attribs_to_json(xml_element){\r\n    let res = {};\r\n    for (let attr in xml_element.attributes)\r\n        if(!isNaN(attr))\r\n            res[xml_element.attributes[attr].name] = xml_element.attributes[attr].value;\r\n    return res\r\n}\r\n\r\nexport function xml_to_json(xml_text) {\r\n    let parser = new DOMParser();\r\n    let xmlDoc = parser.parseFromString(xml_text, \"text/xml\");\r\n    let root = xmlDoc.getElementsByTagName(\"form\")[0];\r\n\r\n    let data = {};\r\n    if (root !== undefined) {\r\n        data = attribs_to_json(root);\r\n        let groups = [];\r\n        root.childNodes.forEach(child => {\r\n            if(child.attributes){\r\n                groups.push(parse_group(child))\r\n            }\r\n        });\r\n        data[\"groups\"] = groups;\r\n        return data\r\n    }\r\n   return false\r\n}\r\n\r\n","import React from \"react\"\r\n\r\n\r\nexport default class DataEditor extends React.Component {\r\n    state = {\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.onRef(this)\r\n    }\r\n    componentWillUnmount() {\r\n        this.props.onRef(null)\r\n    }\r\n\r\n    emit_all(){\r\n        for(let gr_id in this.props.data.groups){\r\n            for(let itm_id in this.props.data.groups[gr_id].itemProps)\r\n                if(this.props.data.groups[gr_id].itemProps[itm_id].id in this.state){\r\n                    console.log(this.props.data.groups[gr_id].itemProps[itm_id].id)\r\n                    this.props.callbackFunc(this.props.data.groups[gr_id].itemProps[itm_id].id, this.state[this.props.data.groups[gr_id].itemProps[itm_id].id])\r\n                }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={\"data-editor\"}>\r\n            {this.props.data.groups.map(groupProp =>\r\n                <div className={\"group-block\"} key={groupProp.id}>\r\n                    <h4>{groupProp.title}</h4>\r\n                    {groupProp[\"itemProps\"].map(itm =>\r\n                        <input type={\"text\"} id={itm.id} key={itm.id} placeholder={itm.nullable ? \"\" : \"Test\"}\r\n                               onChange={e=>{\r\n                                   this.props.callbackFunc(itm.id, e.target.value);\r\n                                   this.setState({[itm.id]: e.target.value});\r\n                               }}/>)}\r\n                </div>)\r\n            }\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nDataEditor.defaultProps = {\r\n    data: [],\r\n    callbackFunc: (b, c) => 0\r\n};","import React from \"react\"\r\nimport PrintForm from \"../printForm/printForm\";\r\nimport {xml_to_json} from \"../../services/transform\";\r\nimport DataEditor from \"../dataEditor/dataEditor\";\r\nimport \"../../styles/codeEditor.css\"\r\nimport {get_image} from \"../../services/connection\";\r\n\r\nexport default class Controller extends React.Component {\r\n    state = {\r\n        data: false,\r\n        backmap: false,\r\n        img: {\r\n            data: \"loading.jpg\",\r\n            code: \"NOIMG\"\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.update_value = this.update_value.bind(this)\r\n    }\r\n\r\n    gen_backmap(json_view) {\r\n        let mp = {}\r\n        for (let i = 0; i < json_view.groups.length; i++) {\r\n            for (let j = 0; j < json_view.groups[i].itemProps.length; j++) {\r\n                mp[json_view.groups[i].itemProps[j].id] = {group: i, item:j}\r\n            }\r\n        }\r\n        return mp\r\n    }\r\n\r\n    update_value(itm, val) {\r\n        this.setState(function (state) {\r\n            let gp_index = state.backmap[itm].group;\r\n            let itm_index = state.backmap[itm].item;\r\n            state.data.groups[gp_index].itemProps[itm_index].data = val;\r\n            return {\r\n                data: state.data\r\n            }\r\n        });\r\n    }\r\n\r\n    emit_when_possible(){\r\n        if(this.child)\r\n            this.child.emit_all();\r\n        else\r\n            setTimeout(()=>this.emit_when_possible(), 40);\r\n    }\r\n\r\n    update_state(new_xml){\r\n        let json_obj = xml_to_json(new_xml);\r\n        this.setState({\r\n            data: json_obj,\r\n            backmap: json_obj ? this.gen_backmap(json_obj) : false\r\n        });\r\n        if(json_obj){\r\n            if(json_obj.id !== this.state.img.code) {\r\n                get_image(json_obj.id).then(img_data => {\r\n                    this.setState({\r\n                        img: {\r\n                            data: URL.createObjectURL(img_data),\r\n                            code: json_obj.id\r\n                        }\r\n                    });\r\n                    this.child.emit_all()\r\n                });\r\n            } else {\r\n                this.emit_when_possible();\r\n            }\r\n        }\r\n\r\n        console.log(json_obj)\r\n    }\r\n\r\n    render(){\r\n        return <div className={\"controller\"}>\r\n            {this.state.data ? <PrintForm data={this.state.data} img={this.state.img.data}/> :\r\n                <div className={\"error-msg\"}>Некорректный xml</div>}\r\n            <textarea className={\"xml-input\"} onChange={e => this.update_state(e.target.value)}/>\r\n            {this.state.data ? <DataEditor data={this.state.data} callbackFunc={this.update_value} onRef={ref => (this.child = ref)}/> :\r\n                <div className={\"error-msg\"}>Некорректный xml</div>}\r\n        </div>\r\n    }\r\n\r\n}\r\n","import './styles/form.css';\nimport Controller from \"./components/controller/controller\";\n\nfunction App() {\n    let data = \"\";\n\n    return (\n        <div className=\"App\">\n            <Controller/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}